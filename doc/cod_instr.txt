ISA: Infineon C166 com 18 bits


PALAVRA DO uPROC: 16 bits


REGISTRADORES:
    R0: constante 0 (não pode ser alterado)
    R1-R7: uso genérico


ESPECIFICAÇÃO DAS OPERAÇÕES DA ULA (ULA_func):
    000: soma ([0]+[1])
    001: subtracao ([0]-[1])
    010: maior ([0]>[1]? 1 : 0)
    011: igual ([0]==[1]? 1 : 0)
    100: maior/igual ([0]>=[1]? 1 : 0)
    101: shift left ([0]<<1)
    110: shift right ([0]>>1)
    111: segunda entrada ([1]) (útil para cópia)
    Sendo que as comparações vão p/ saída booleana da ULA


FORMATOS DE INSTRUÇÃO
    Formato envolvendo dois registradores:
        Opcode[17-14] ; Reg0 [13-11] ; Reg1 [10-8] ; ULA_func[2-0]
        Opcode = 0000

    Formato envolvendo um registrador e uma constante:
        Opcode[17-14] ; Reg0 [13-11] ; #8data [10-3] ; ULA_func[2-0]
        Opcode != 0000 e 1111

    Formato do jump absoluto:
        Opcode[17-14] ; #7maddr [6-0]
        Opcode = 1111


INSTRUÇÕES DA ISA UTILIZADAS:
    ADD Rw, Rw          (pg. 41)    (Ex.: 02B00 - Soma R5 com R3 e guarda em R5)
    ADDB reg, #data8    (pg. 42)    (Ex.: 06040 - Carrega R4 com 8)
    SUB Rw, Rw          (pg. 125)   (Ex.: 02B01 - Subtrai R3 de R5 e guarda em R5)
    SUBB reg, #data8    (pg. 126)   (Ex.: 06809 - Subtrai um de R5 e guarda em R5)
    MOV Rw, Rw          (pg. 95)    (Ex.: 01D07 - Copia R5 para R3)
    JMPA cc, caddr      (pg. 89)    (Ex.: 3C014 - Salta para endereço absoluto 20) cc=cc_UC (unconditional)